#!/usr/bin/ruby

require './create_thumbnails'

class TanoshimuThumbnailGeneratorServer

    def initialize(path)
        @running = false
        @path = path
    end

    def run
        @running = true
        self.listen_to_new_files
    end

    def stop
        @running = false
    end

    def listen_to_new_files
        path = @path
        unless File.directory?(path)
            p "Skipping #{path}... (not a valid directory)"
            return false
        end

        while @running
            p "Getting all videos within `#{path}`..."
            all_videos = get_all_sub_paths path
            
            p "Trying to generation files for every file..."
            p all_videos
            all_videos.each do |movie|
                manager = ThumbnailManager.new movie
                manager.generate force_generation: false
            end

            p "Sleeping for 10 seconds..."
            sleep 1

            if ENV["TANOSHIMU_THUMBNAIL_SERVER_STOP"] == "true"
                self.stop
            end
        end
    end

    private

    def get_all_sub_paths path
        paths = Dir[path + "/**/*"].select{|file| File.file?(path)}
        p "Paths: #{paths}"
        paths.select{|filename| FFMPEG::Movie.new(filename)}.select{|video| video.valid? && !video.video_stream.nil? && !video.audio_stream.nil?}
    end

end

server = TanoshimuThumbnailGeneratorServer.new(ARGV[0])
server.run

