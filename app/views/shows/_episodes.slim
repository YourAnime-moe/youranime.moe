br
.center
    h4 Episodes

- unless @episodes.nil? && @episodes.empty?
	br
    - @episodes.each do |episode_group|
    	#has_menu.container
	        .row
	            - episode_group.each do |episode|
	                .col.m3
	                    - url = '/shows/episodes?id=' + episode.id.to_s
	                    - watched = "watched" if episode.was_watched_by? current_user
	                    .hoverable.clickable.hasmenu class="#{watched}" onclick="window.location.href='#{url}'"
	                        img src="#{episode.get_image_path(current_token)}" style="max-width: 100%"
	                        span.episode name="#{episode.id}" id='episode_#{episode.episode_number}' #{episode.episode_number}) #{episode.title}
	                        div.episode.progressVideo.hidden id="progress_#{episode.id}"

		                    .progress
		                    	.determinate episode_id="#{episode.id}" style="width: 0%"

    javascript:
        var episodes = document.getElementsByClassName("watched");
        $(document).ready(function() {
          [].forEach.call(episodes, function(episode_div) {
            [].forEach.call(episode_div.children, function(progress) {
              if (progress.classList.contains("progress")) {
                var progress_div = progress.children[0];
                var id = progress_div.getAttribute("episode_id");
                var videos = JSON.parse(localStorage.videos);
                [].forEach.call(videos, function(video) {
                    if (video.videoId != id) {
                        return;
                    }
                    var ratio = video.ratio;
                    if (ratio) {
                        var info = "width: " + ratio + "%";
                        progress_div.style = info;
                    }
                });
              }
            });
          });
        });

- else
    .container
        .center
            p We appologize, but no episodes are currently available for this show.